+++++++++++++++++++++++++++++++++++++++++++++ ^_^ 开始 ^_^ ++++++++++++++++++++++++++++++++++++++++++++
致各位孜孜不倦的开发者：	
	在你下定决心想要贡献出你写的工具时，为了确保能在本框架上良好运行，请务必关注以下两方面：
	
	（一）规范性
	1、开发语言：python，其它编程语言暂不提供翻译功能。
	2、如果你的工具不是单一模块，请将所有相关文件打包成python包,即只能提交包或者单一模块。
	3、请保证包名（如果是包的话）、模块名及主类名三者一样，包括大小写，其余随意。
		示例：假如你的工具有多个文件，主类名为 MyTool，那么应这样打包：
		MyTool:
		------ __init__.py
		------ MyTool.py (含主类MyTool)
		------ otherModules.py
		------ otherFolders
	
	（二）兼容性
	在你的主类中，你需要注意以下几点：
	1、继承Plugin类：from coffesploit.core.pluginmanage.plugin import Plugin。此要点不强求，但为了
	   安全起见，建议继承。
	2、至少需要提供以下几个方法，参数也必须一致：
	   def status(self) -----> dict: 提供运行你的工具所期待的所有参数，数量不限，以字典的形式返回，
							 字典的key为参数名字，value随意(可考虑用其设置默认参数)。因此，在你的
							 初始化函数 __init__() 中不能再传递参数。如果工具不需要参数，可返回一
							 个空字典，或不提供本方法（前提是继承了类Plugin）。
	   def run(self, status) -----> None: 用来运行工具，参数status是设置后的参数字典，意义同上，无
							 返回值。
	   def result(self) -----> dict: 用来返回运行工具后期待得到的结果，也以字典的形式返回。
	   def help(self) -----> str: 用来返回对你的工具的功能、使用方法等的简单描述，以便管理员分类或
							 他人使用，也可不提供本方法（前提是继承了类Plugin），但不推荐。返回字符
							 串。
	示例：假如你有一个工具类 MyScanTool，是用来扫描某网段内的主机信息，其本身需要三个参数：hosts、
		  ports（默认为80，3389）、otherArgs，那么应这样规划你的程序：
		  ----------------------------------------------------------------------------------------
		  |import otherModules																	 |
		  |from coffesploit.core.pluginmanage.plugin import Plugin	 # 注意继承Plugin			 |
		  |																						 |
		  |class MyScanTool(Plugin):															 |
		  |		def __init__(self):					# 注意不能在此传参数						     |
		  |			# initialize work															 |
		  |																						 |
		  |		def status(self):					# 注意返回字典，包含需要的参数信息			 |
		  |			return {'hosts': None, 'ports': '80,3389', 'otherArgs': None}				 |
		  |																						 |
		  |		def run(self, status):															 |
		  |			if type(status) == dict:													 |
		  |				hosts = status.get('hosts')												 |
		  |				ports = status.get('ports')												 |
		  |				otherArgs = status.get('otherArgs')										 |
		  |				# do something.....														 |
		  |																						 |
		  |		def result(self						# 注意返回字典，包含期待运行结果			     |
		  |			return {'url': 'xxx', 'info': 'xxx'}										 |
		  |																						 |
		  |		def help(self):						# 注意添加工具描述信息						 |
		  |			return('''																	 |
		  |					Description: scan hosts.											 |
		  |					Useage: hosts ---> Demo: www.google.com or 192.168.174.33 etc.       |
		  |							ports ---> Demo: 20,25-80,91 etc.							 |
		  |							otherArgs ---> Demo: -u,-l etc.								 |
		  |			''')																         |
		  |																						 |
		  |		def otherMethods(self, *args, **kwargs):	# 其它方法随意						 |
		  |			pass																		 |
		  |																						 |
		  |class OtherClasses:				# 如有必要也可定义其它类                              |
		  |		# methods																		 |
		  | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _|
	
	另外，为了避免不必要的麻烦，请暂时舍弃你对中文的热爱，如果你经常深受编码困扰，我相信你会同意我
	的观点！
	最后，如果你一切已准备就绪，请及时通知管理员接收，待审核完其中并无“黄、赌、毒”等不良信息后，随
	后的事情便可交由其自行处理了。
	
																					  规范代码
																						  从你做起
+++++++++++++++++++++++++++++++++++++++++++ ^_^ 结束 ^_^ ++++++++++++++++++++++++++++++++++++++++++++
